version: "3"
services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    env_file: .env
    networks:
      - mnetwork
    command: postgres -c wal_level=logical
    volumes:
      - "./postgresdata:/var/lib/postgresql/data"

  web:
    build: .
    command: 
      - bash
      - -c
      - |
        while !</dev/tcp/postgres/5432; do sleep 1; done; uvicorn app.main:app --host 0.0.0.0 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - mnetwork
    env_file: ./.env

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.3
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - mnetwork
    ports:
      - "9200:9200"
    volumes:
      - ./elasticdata:/app/

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.2.3
    env_file: .env
    networks:
      - mnetwork
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    depends_on:
      - pgsync
    networks:
      - mnetwork

  pgsync:
    build: .
    command:
      - bash
      - -c
      - |
        while !</dev/tcp/elasticsearch/9200; do sleep 1; done; \
        bootstrap
        pgsync --daemon > /dev/null
    env_file: .env
    networks:
      - mnetwork
    depends_on:
      - elasticsearch
      - postgres

networks:
  mnetwork:
    driver: bridge

volumes:
  postgresdata:
    external: true
